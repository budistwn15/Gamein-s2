//file:noinspection GrDeprecatedAPIUsage
//file:noinspection GrDeprecatedAPIUsage
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'dagger.hilt.android.plugin'
    id 'jacoco'
}
apply from: '../shared_dependencies.gradle'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        //noinspection GrDeprecatedAPIUsage
        xml.enabled = true
        //noinspection GrDeprecatedAPIUsage
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}


android {
    compileSdk 32

    defaultConfig {
        applicationId "com.budi.setiawan.gamein"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.returnDefaultValues = true
    }

    dynamicFeatures = [':favorite']
}

dependencies {
    implementation project(":core")
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection DifferentStdlibGradleVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation("androidx.appcompat:appcompat-resources:1.4.2")
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation("org.jsoup:jsoup:1.14.3")
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'
}